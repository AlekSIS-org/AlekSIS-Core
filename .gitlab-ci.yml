image: registry.edugit.org/teckids/team-sysadmin/docker-images/python-pimped:master

stages:
  - test
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  FF_NETWORK_PER_BUILD: "true"

cache:
  key:
    files:
      - poetry.lock
      - pyproject.toml
  paths:
    - .cache/pip
    - .tox

test:
  stage: test
  services:
    - name: selenium/standalone-firefox
      alias: selenium
  before_script:
    - adduser --disabled-password --gecos "Test User" testuser
    - chown -R testuser .
  script:
    - sudo apt update
    - sudo apt install python3-ldap libldap2-dev libssl-dev libsasl2-dev python3.7-dev -y
    - sudo -u testuser
      env TEST_SELENIUM_HUB=http://selenium:4444/wd/hub
          TEST_SELENIUM_BROWSERS=firefox
          TEST_HOST=build
      tox -e selenium -- --junitxml=.tox/junit.xml
  artifacts:
    paths:
      - .tox/screenshots
    reports:
      junit: .tox/junit.xml

lint:
  stage: test
  script:
    - tox -e lint,security

build_dist:
  stage: build
  script:
    - tox -e build
  artifacts:
    paths:
      - dist/

pages:
  stage: deploy
  before_script:
    - cp -r .tox/screenshots/firefox docs/screenshots
  script:
    - export LC_ALL=en_GB.utf8
    - tox -e docs -- BUILDDIR=../public/docs
  artifacts:
    paths:
    - public/
  only:
    - master

build_docker:
  stage: build
  image:
    name: tomkukral/buildah
  script:
    - export STORAGE_DRIVER=vfs
    - echo "$CI_REGISTRY_PASSWORD" | buildah login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - buildah bud -f $CI_PROJECT_DIR/Dockerfile -t $CI_REGISTRY_IMAGE:CI_COMMIT_REF_NAME $CI_PROJECT_DIR
    - buildah bud -f $CI_PROJECT_DIR/docker/nginx/Dockerfile -t $CI_REGISTRY_IMAGE/nginx:CI_COMMIT_REF_NAME $CI_PROJECT_DIR/docker/nginx
    - buildah push $CI_REGISTRY_IMAGE:CI_COMMIT_REF_NAME
    - buildah push $CI_REGISTRY_IMAGE/nginx:CI_COMMIT_REF_NAME
#  only:
#    - master
#    - tags

deploy_demo-master:
  stage: deploy
  environment:
    name: demo/master
    url: http://demo-master.aleksis.org
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - grep -v "build:" docker-compose.yml | ssh root@demo-master.aleksis.org
       env ALEKSIS_IMAGE_TAG=${CI_COMMIT_REF_NAME}
       docker-compose
        -p aleksis-${CI_ENVIRONMENT_SLUG}
        -f /dev/stdin
        pull
    - grep -v "build:" docker-compose.yml | ssh root@demo-master.aleksis.org
       env ALEKSIS_IMAGE_TAG=${CI_COMMIT_REF_NAME}
           NGINX_HTTP_PORT=80
           ALEKSIS_maintenance__debug=true
       docker-compose
        -p aleksis-${CI_ENVIRONMENT_SLUG}
        -f /dev/stdin
        up -d
  only:
    - master
